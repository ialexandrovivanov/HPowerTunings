@using HPowerTunings.ViewModels.EmployeeModels
@using System.Linq
@model ICollection<EmployeeStartEndViewModel>

@{
    ViewData["Title"] = "EmployeeStatistics";
    Layout = "~/Views/Shared/_LayoutBoss.cshtml";
}

    <style>
        body {
            background-color: rgb(240, 240, 240)
        }
    </style>

<div style="padding-top:80px"></div>
<h3>Employee Statistics</h3>
<div class="container-fluid justify-content-center text-center" style="max-width:600px; padding-top:30px">
    @foreach (var mechanic in Model)
    {
        <div style="background-color:cornsilk; padding-top:10px; padding-right:10px; padding-left:10px;
             padding-bottom:10px; border-top-left-radius:6px; border-top-right-radius:6px">
            <h5 style="color:indigo"><strong>@mechanic.FullName</strong></h5>
        </div>
        <div style="background-color:darkseagreen;  padding-top:10px;
             padding-bottom:10px; padding-left:10px; padding-right:10px; border-bottom-left-radius:6px;
             border-bottom-right-radius:6px;">
            <p>@mechanic.Possition</p>
            <p>@mechanic.Email</p>
            <p>@mechanic.PhoneNumber</p>
            <h5 style="color:indigo"><strong>Repairs:</strong></h5>
            @foreach (var repair in mechanic.Repairs)
            {
                if (repair.IsRepairPending)
                {
                    <p>Repair name: <strong>@repair.RepairName</strong>
                        <span style="color:mediumvioletred"><strong> - active now</strong></span>
                    </p>
                }
                else
                {
                    <p>Repair name: <strong>@repair.RepairName</strong></p>
                }
            }
            <p>
                Count of finalized repairs:
                @{
                    decimal result;
                    var allRepairs = mechanic.Repairs.Where(r => r.IsRepairPending == false).Count();
                    var allMechanics = mechanic.Repairs.Where(r => r.IsRepairPending == false).Sum(r => r.NumberOfMechanics);
                    if (allMechanics != 0) { result = Math.Round((decimal)allRepairs / (decimal)allMechanics, 2); }
                    else { result = allRepairs; }
                }
                <strong>@result</strong>
            </p>
            <p>
                Sum of finalized repairs:
                @{ decimal money;}
                @if (result != 0)
                {
                    money = mechanic.Repairs.Where(r => r.IsRepairPending == false).Sum(r => r.RepairPrice) * result;
                }
                else
                {
                    money = mechanic.Repairs.Where(r => r.IsRepairPending == false).Sum(r => r.RepairPrice);
                }
                <strong>$@money.ToString("F2")</strong>
            </p>
        </div>

        <p></p>
        }
    </div>
    <div class="container-fluid justify-content-center text-center" style="max-width:600px">
        @foreach (var empl in Model)
        {
            <p></p>
        }
    </div>
    <div style="height:60px"></div>
